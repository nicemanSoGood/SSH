package com.ihtc.action;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Restrictions;

import com.ihtc.bean.Customer;
import com.ihtc.bean.PageBean;
import com.ihtc.service.CustomerService;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ModelDriven;

public class CustomerAction extends ActionSupport implements ModelDriven<Customer>{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private Customer customer = new Customer();
	
	private CustomerService customerService;
	private Integer currentPage;
	private Integer pageSize;

	public String list() throws Exception {
		
		//封装离线查询对象
		DetachedCriteria criteria = DetachedCriteria.forClass(Customer.class);
		//判断并封装对象
		if(StringUtils.isNotBlank(customer.getCust_name())){
			criteria.add(Restrictions.like("cust_name","%"+customer.getCust_name()+"%"));
		}
		
		//1.调用service查询分页数据(PageBean)
		PageBean pageBean = customerService.getPageBean(criteria,currentPage,pageSize);
		//2.将PageBean转发到页面
		ActionContext.getContext().put("pageBean", pageBean);
		
		return "list";
	}
	
	public String add() throws Exception {
		
		customerService.save(customer);
		return "toList";
		
	}
	
	public void setCustomerService(CustomerService customerService) {
		this.customerService = customerService;
	}

	@Override
	public Customer getModel() {
		return customer;
	}

	public void setCurrentPage(Integer currentPage) {
		this.currentPage = currentPage;
	}


	public void setPageSize(Integer pageSize) {
		this.pageSize = pageSize;
	}

}
